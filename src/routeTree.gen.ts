/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as StudentsIndexImport } from "./routes/students/index"
import { Route as LoginIndexImport } from "./routes/login/index"
import { Route as DashboardIndexImport } from "./routes/dashboard/index"
import { Route as AssessmentIndexImport } from "./routes/assessment/index"
import { Route as StudentsStudentsListIndexImport } from "./routes/students/students-list/index"
import { Route as LoginForgotPasswordIndexImport } from "./routes/login/forgot-password/index"
import { Route as AssessmentQuestionPapersIndexImport } from "./routes/assessment/question-papers/index"
import { Route as AssessmentExamIndexImport } from "./routes/assessment/exam/index"
import { Route as AssessmentCreateAssessmentAssessmentIdExamtypeIndexImport } from "./routes/assessment/create-assessment/$assessmentId/$examtype/index"
import { Route as AssessmentExamAssessmentDetailsAssessmentIdExamTypeIndexImport } from "./routes/assessment/exam/assessment-details/$assessmentId/$examType/index"

// Create/Update Routes

const StudentsIndexRoute = StudentsIndexImport.update({
  path: "/students/",
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: "/dashboard/",
  getParentRoute: () => rootRoute,
} as any)

const AssessmentIndexRoute = AssessmentIndexImport.update({
  path: "/assessment/",
  getParentRoute: () => rootRoute,
} as any)

const StudentsStudentsListIndexRoute = StudentsStudentsListIndexImport.update({
  path: "/students/students-list/",
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordIndexRoute = LoginForgotPasswordIndexImport.update({
  path: "/login/forgot-password/",
  getParentRoute: () => rootRoute,
} as any)

const AssessmentQuestionPapersIndexRoute =
  AssessmentQuestionPapersIndexImport.update({
    path: "/assessment/question-papers/",
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExamIndexRoute = AssessmentExamIndexImport.update({
  path: "/assessment/exam/",
  getParentRoute: () => rootRoute,
} as any)

const AssessmentCreateAssessmentAssessmentIdExamtypeIndexRoute =
  AssessmentCreateAssessmentAssessmentIdExamtypeIndexImport.update({
    path: "/assessment/create-assessment/$assessmentId/$examtype/",
    getParentRoute: () => rootRoute,
  } as any)

const AssessmentExamAssessmentDetailsAssessmentIdExamTypeIndexRoute =
  AssessmentExamAssessmentDetailsAssessmentIdExamTypeIndexImport.update({
    path: "/assessment/exam/assessment-details/$assessmentId/$examType/",
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/assessment/": {
      id: "/assessment/"
      path: "/assessment"
      fullPath: "/assessment"
      preLoaderRoute: typeof AssessmentIndexImport
      parentRoute: typeof rootRoute
    }
    "/dashboard/": {
      id: "/dashboard/"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    "/login/": {
      id: "/login/"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    "/students/": {
      id: "/students/"
      path: "/students"
      fullPath: "/students"
      preLoaderRoute: typeof StudentsIndexImport
      parentRoute: typeof rootRoute
    }
    "/assessment/exam/": {
      id: "/assessment/exam/"
      path: "/assessment/exam"
      fullPath: "/assessment/exam"
      preLoaderRoute: typeof AssessmentExamIndexImport
      parentRoute: typeof rootRoute
    }
    "/assessment/question-papers/": {
      id: "/assessment/question-papers/"
      path: "/assessment/question-papers"
      fullPath: "/assessment/question-papers"
      preLoaderRoute: typeof AssessmentQuestionPapersIndexImport
      parentRoute: typeof rootRoute
    }
    "/login/forgot-password/": {
      id: "/login/forgot-password/"
      path: "/login/forgot-password"
      fullPath: "/login/forgot-password"
      preLoaderRoute: typeof LoginForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    "/students/students-list/": {
      id: "/students/students-list/"
      path: "/students/students-list"
      fullPath: "/students/students-list"
      preLoaderRoute: typeof StudentsStudentsListIndexImport
      parentRoute: typeof rootRoute
    }
    "/assessment/create-assessment/$assessmentId/$examtype/": {
      id: "/assessment/create-assessment/$assessmentId/$examtype/"
      path: "/assessment/create-assessment/$assessmentId/$examtype"
      fullPath: "/assessment/create-assessment/$assessmentId/$examtype"
      preLoaderRoute: typeof AssessmentCreateAssessmentAssessmentIdExamtypeIndexImport
      parentRoute: typeof rootRoute
    }
    "/assessment/exam/assessment-details/$assessmentId/$examType/": {
      id: "/assessment/exam/assessment-details/$assessmentId/$examType/"
      path: "/assessment/exam/assessment-details/$assessmentId/$examType"
      fullPath: "/assessment/exam/assessment-details/$assessmentId/$examType"
      preLoaderRoute: typeof AssessmentExamAssessmentDetailsAssessmentIdExamTypeIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AssessmentIndexRoute,
  DashboardIndexRoute,
  LoginIndexRoute,
  StudentsIndexRoute,
  AssessmentExamIndexRoute,
  AssessmentQuestionPapersIndexRoute,
  LoginForgotPasswordIndexRoute,
  StudentsStudentsListIndexRoute,
  AssessmentCreateAssessmentAssessmentIdExamtypeIndexRoute,
  AssessmentExamAssessmentDetailsAssessmentIdExamTypeIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/assessment/",
        "/dashboard/",
        "/login/",
        "/students/",
        "/assessment/exam/",
        "/assessment/question-papers/",
        "/login/forgot-password/",
        "/students/students-list/",
        "/assessment/create-assessment/$assessmentId/$examtype/",
        "/assessment/exam/assessment-details/$assessmentId/$examType/"
      ]
    },
    "/assessment/": {
      "filePath": "assessment/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/students/": {
      "filePath": "students/index.tsx"
    },
    "/assessment/exam/": {
      "filePath": "assessment/exam/index.tsx"
    },
    "/assessment/question-papers/": {
      "filePath": "assessment/question-papers/index.tsx"
    },
    "/login/forgot-password/": {
      "filePath": "login/forgot-password/index.tsx"
    },
    "/students/students-list/": {
      "filePath": "students/students-list/index.tsx"
    },
    "/assessment/create-assessment/$assessmentId/$examtype/": {
      "filePath": "assessment/create-assessment/$assessmentId/$examtype/index.tsx"
    },
    "/assessment/exam/assessment-details/$assessmentId/$examType/": {
      "filePath": "assessment/exam/assessment-details/$assessmentId/$examType/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
