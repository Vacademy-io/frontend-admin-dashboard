/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as LoginIndexImport } from "./routes/login/index"
import { Route as DashboardIndexImport } from "./routes/dashboard/index"
import { Route as LoginForgotPasswordIndexImport } from "./routes/login/forgot-password/index"
import { Route as DashboardStudentsIndexImport } from "./routes/dashboard/students/index"

// Create/Update Routes

const LoginIndexRoute = LoginIndexImport.update({
  id: "/login/",
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: "/dashboard/",
  path: "/dashboard/",
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotPasswordIndexRoute = LoginForgotPasswordIndexImport.update({
  id: "/login/forgot-password/",
  path: "/login/forgot-password/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardStudentsIndexRoute = DashboardStudentsIndexImport.update({
  id: "/dashboard/students/",
  path: "/dashboard/students/",
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/dashboard/": {
      id: "/dashboard/"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    "/login/": {
      id: "/login/"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    "/dashboard/students/": {
      id: "/dashboard/students/"
      path: "/dashboard/students"
      fullPath: "/dashboard/students"
      preLoaderRoute: typeof DashboardStudentsIndexImport
      parentRoute: typeof rootRoute
    }
    "/login/forgot-password/": {
      id: "/login/forgot-password/"
      path: "/login/forgot-password"
      fullPath: "/login/forgot-password"
      preLoaderRoute: typeof LoginForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/dashboard": typeof DashboardIndexRoute
  "/login": typeof LoginIndexRoute
  "/dashboard/students": typeof DashboardStudentsIndexRoute
  "/login/forgot-password": typeof LoginForgotPasswordIndexRoute
}

export interface FileRoutesByTo {
  "/dashboard": typeof DashboardIndexRoute
  "/login": typeof LoginIndexRoute
  "/dashboard/students": typeof DashboardStudentsIndexRoute
  "/login/forgot-password": typeof LoginForgotPasswordIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/dashboard/": typeof DashboardIndexRoute
  "/login/": typeof LoginIndexRoute
  "/dashboard/students/": typeof DashboardStudentsIndexRoute
  "/login/forgot-password/": typeof LoginForgotPasswordIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/dashboard"
    | "/login"
    | "/dashboard/students"
    | "/login/forgot-password"
  fileRoutesByTo: FileRoutesByTo
  to: "/dashboard" | "/login" | "/dashboard/students" | "/login/forgot-password"
  id:
    | "__root__"
    | "/dashboard/"
    | "/login/"
    | "/dashboard/students/"
    | "/login/forgot-password/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  DashboardStudentsIndexRoute: typeof DashboardStudentsIndexRoute
  LoginForgotPasswordIndexRoute: typeof LoginForgotPasswordIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  DashboardStudentsIndexRoute: DashboardStudentsIndexRoute,
  LoginForgotPasswordIndexRoute: LoginForgotPasswordIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/dashboard/",
        "/login/",
        "/dashboard/students/",
        "/login/forgot-password/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/dashboard/students/": {
      "filePath": "dashboard/students/index.tsx"
    },
    "/login/forgot-password/": {
      "filePath": "login/forgot-password/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
